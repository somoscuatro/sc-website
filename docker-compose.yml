version: '3.9'

services:
  db:
    container_name: ${NAME}-db
    image: mysql:8.0
    ports:
      - 3306:3306
    volumes:
      - db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - internal

  wp:
    container_name: ${NAME}-wp
    depends_on:
      - db
    build:
      context: .
      dockerfile: .docker/wp/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:-8.1}
        PHP_MAX_INPUT_VARS: ${PHP_MAX_INPUT_VARS:-4000}
        PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT:-1024M}
        PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME:-60}
    environment:
      XDEBUG_MODE: develop,debug
      XDEBUG_CONFIG: "client_host=host.docker.internal"
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
    networks:
      - internal

  nginx:
    container_name: ${NAME}-nginx
    depends_on:
      - wp
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    environment:
      - "DOMAIN=${DOMAIN}"
    volumes:
      - ./:/var/www/html
      - ./.docker/certs:/etc/ssl
      - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internal

  cli:
    container_name: ${NAME}-cli
    image: wordpress:cli-php${PHP_VERSION:-8.1}
    volumes_from:
      - wp
    links:
      - db
    env_file:
      - .env
    entrypoint: wp
    command: "--info"
    networks:
      - internal

  mailhog:
    container_name: ${NAME}-mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - internal

networks:
  internal:
volumes:
  db:
  certs:
